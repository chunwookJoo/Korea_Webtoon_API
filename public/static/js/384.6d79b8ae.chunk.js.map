{"version":3,"file":"static/js/384.6d79b8ae.chunk.js","mappings":"iUAeMA,GAAW,IAAIC,MAAOC,SAEtBC,GAAQ,wBACRC,EAFO,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,KAER,IAAbJ,EAAiB,EAAIA,EAAW,GACnDK,EAAO,EAyGX,EA9DoB,WACnB,OAA2BC,EAAAA,EAAAA,MAArBC,EAAN,EAAMA,OAAQC,EAAd,EAAcA,SACRC,EAA6B,GAAPJ,EACtBK,EAAQC,IAAAA,MAASJ,EAAQ,CAAEK,mBAAmB,IACpD,GAAsCC,EAAAA,EAAAA,UAAS,CAACV,IAAhD,eAAOW,EAAP,KAAoBC,EAApB,MAEAC,EAAAA,EAAAA,YAAU,WACTX,EAAO,EACP,IAAMY,EAAW,yCAAG,wGACnBF,EAAe,EAAC,SAACG,EAAA,EAAD,MACVC,EACQ,MAAbX,EACG,OACa,eAAbA,EACA,cACAA,GACHE,EAAMU,OAASV,EAAMU,KAAOhB,GACvBiB,EACU,QAAfX,EAAMU,KACH,YACe,QAAfV,EAAMU,KACN,OACA,aAAeV,EAAMU,KAdN,SAeIE,IAAAA,IAAUC,EAAAA,GAAUJ,EAAeE,GAfvC,uBAeXG,EAfW,EAeXA,KAfW,UAgBOA,EAAKC,KAAI,SAACC,GAAD,OAClC,SAACC,EAAA,EAAD,CAASC,YAAaF,GADY,IAhBhB,eAgBbG,EAhBa,OAmBnBd,EAAec,GAnBI,+DAAH,qDAsBjBZ,GACA,GAAE,CAACP,EAAMU,KAAMZ,IAEhB,OAAiCsB,EAAAA,EAAAA,MAAjC,eAAOC,EAAP,WACiB1B,IAIjB,IAAM2B,EACLvB,EAAsBK,EAAYmB,QAAU,GAAKnB,EAAYmB,QAC5D,eAAIC,IAAKH,EAASI,UAAU,UAA5B,UACC,SAAC,IAAD,CAAiBC,KAAK,KAAKC,KAAMC,EAAAA,IAAWC,MAAI,MAGjDpC,EAEIqC,EAAqB1B,EAAY2B,MAAM,EAAU,GAAPpC,GAGhD,OAFAmC,EAAmBE,KAAKV,IAGvB,6BACC,oBAASG,UAAU,wBACnB,oBAASA,UAAU,qBAAnB,UAIC,eAAIA,UAAU,eAAd,SAA8BK,QAIjC,C","sources":["pages/WebtoonPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nimport Loading from \"../components/Loading\";\r\nimport Webtoon from \"../components/Webtoon\";\r\nimport axios from \"axios\";\r\nimport qs from \"qs\";\r\n\r\nimport \"../assets/scss/pages/webtoonPage.scss\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { API_URL } from \"../config\";\r\n\r\n// const WEBTOON_API_URL = \"https://korea-webtoon-api.herokuapp.com\";\r\nconst todayNum = new Date().getDay();\r\nconst week = [\"0\", \"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\nconst EMPTY = <></>;\r\nconst todayWeek = week[todayNum === 0 ? 6 : todayNum - 1];\r\nlet part = 2;\r\n\r\n// const WeekLink = () => {\r\n// \tlet { search, pathname } = useLocation();\r\n// \tconst week = [\"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"일\"];\r\n// \tconst todayNum = new Date().getDay();\r\n\r\n// \tconst weekDayLinkOptions = week.map((day, weekNum) => ({\r\n// \t\tname: day,\r\n// \t\tsrc: `?week=${weekNum}`,\r\n// \t}));\r\n\r\n// \tweekDayLinkOptions.unshift({\r\n// \t\tname: \"신작\",\r\n// \t\tsrc: \"?week=new\",\r\n// \t});\r\n\r\n// \tweekDayLinkOptions.push({\r\n// \t\tname: \"완결\",\r\n// \t\tsrc: \"?week=fin\",\r\n// \t});\r\n\r\n// \tconst today = week[todayNum === 0 ? 6 : todayNum - 1];\r\n\r\n// \t// 요일 nav\r\n// \tconst WeekList = weekDayLinkOptions.map((weekItem, index) => {\r\n// \t\tlet active = \"\";\r\n// \t\t!search\r\n// \t\t\t? weekItem.name === today && (active = \"active\")\r\n// \t\t\t: search === weekItem.src && (active = \"active\");\r\n\r\n// \t\treturn (\r\n// \t\t\t<li key={index}>\r\n// \t\t\t\t<Link to={weekItem.src} className={active}>\r\n// \t\t\t\t\t{weekItem.name}\r\n// \t\t\t\t</Link>\r\n// \t\t\t</li>\r\n// \t\t);\r\n// \t});\r\n\r\n// \treturn <ul className=\"week-list-wrap\">{WeekList}</ul>;\r\n// };\r\n\r\nconst WebtoonPage = () => {\r\n\tlet { search, pathname } = useLocation();\r\n\tconst visibleWebtoonCount = part * 12;\r\n\tconst query = qs.parse(search, { ignoreQueryPrefix: true });\r\n\tconst [webtoonList, setWebtoonList] = useState([EMPTY]);\r\n\r\n\tuseEffect(() => {\r\n\t\tpart = 2;\r\n\t\tconst DataParsing = async () => {\r\n\t\t\tsetWebtoonList([<Loading />]);\r\n\t\t\tconst PLATFORM_URL =\r\n\t\t\t\tpathname === \"/\"\r\n\t\t\t\t\t? \"/all\"\r\n\t\t\t\t\t: pathname === \"/kakaoPage\"\r\n\t\t\t\t\t? \"/kakao-page\"\r\n\t\t\t\t\t: pathname;\r\n\t\t\t!query.week && (query.week = todayWeek);\r\n\t\t\tconst WEEK_URL =\r\n\t\t\t\tquery.week === \"fin\"\r\n\t\t\t\t\t? \"/finished\"\r\n\t\t\t\t\t: query.week === \"new\"\r\n\t\t\t\t\t? \"/new\"\r\n\t\t\t\t\t: \"/week?day=\" + query.week;\r\n\t\t\tconst { data } = await axios.get(API_URL + PLATFORM_URL + WEEK_URL);\r\n\t\t\tconst WebtoonList = await data.map((webtoon) => (\r\n\t\t\t\t<Webtoon webtoonData={webtoon} />\r\n\t\t\t));\r\n\t\t\tsetWebtoonList(WebtoonList);\r\n\t\t\treturn;\r\n\t\t};\r\n\t\tDataParsing();\r\n\t}, [query.week, pathname]);\r\n\r\n\tconst [moreRef, isMoreRefShow] = useInView();\r\n\tisMoreRefShow && part++;\r\n\r\n\t// console.log(visibleWebtoonCount); // 24, 36, 48 ...\r\n\r\n\tconst More =\r\n\t\tvisibleWebtoonCount < webtoonList.length && 24 < webtoonList.length ? (\r\n\t\t\t<li ref={moreRef} className=\"loading\">\r\n\t\t\t\t<FontAwesomeIcon size=\"xl\" icon={faSpinner} spin />\r\n\t\t\t</li>\r\n\t\t) : (\r\n\t\t\tEMPTY\r\n\t\t);\r\n\tconst VisibleWebtoonList = webtoonList.slice(0, part * 12);\r\n\tVisibleWebtoonList.push(More);\r\n\r\n\treturn (\r\n\t\t<main>\r\n\t\t\t<section className=\"contents-container\"></section>\r\n\t\t\t<section className=\"contents-container\">\r\n\t\t\t\t{/* <div>\r\n\t\t\t\t\t<WeekLink />\r\n\t\t\t\t</div> */}\r\n\t\t\t\t<ul className=\"webtoon-list\">{VisibleWebtoonList}</ul>\r\n\t\t\t</section>\r\n\t\t</main>\r\n\t);\r\n};\r\n\r\nexport default WebtoonPage;\r\n"],"names":["todayNum","Date","getDay","EMPTY","todayWeek","part","useLocation","search","pathname","visibleWebtoonCount","query","qs","ignoreQueryPrefix","useState","webtoonList","setWebtoonList","useEffect","DataParsing","Loading","PLATFORM_URL","week","WEEK_URL","axios","API_URL","data","map","webtoon","Webtoon","webtoonData","WebtoonList","useInView","moreRef","More","length","ref","className","size","icon","faSpinner","spin","VisibleWebtoonList","slice","push"],"sourceRoot":""}